{"version":3,"file":"static/js/86.63033438.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","webpack://grand/./src/components/Main/MainContent/MainContent.module.scss?ba75","components/Main/MainContent/MainContent.tsx","views/MainView.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MainContent_content__cOWRP\"};","import { ReactElement } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useTranslation } from 'react-i18next';\nimport Card from 'react-bootstrap/Card';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Path } from '../../../routing';\nimport styles from './MainContent.module.scss';\n\n/**\n * Footer.\n *\n * @returns React component.\n */\nexport const MainContent = (): ReactElement => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { t } = useTranslation('main', { keyPrefix: 'content' });\n\n  return (\n    <>\n      <Container className={`text-bg-light ${styles.content}`}>\n        <h1 className=\"display-1 text-danger text-center pt-5\">{t('heading')}</h1>\n        <Row className=\"text-center justify-content-center\">\n          {featuresConfig.map(({ icon, link }, i) => (\n            <Col\n              xs={12}\n              sm={6}\n              lg={4}\n              key={i}\n            >\n              <Card className=\"text-bg-dark my-4\">\n                <Card.Body>\n                  <Card.Title>\n                    <FontAwesomeIcon\n                      size=\"3x\"\n                      icon={icon}\n                    />\n                  </Card.Title>\n                  <Card.Text>{t(i.toString())}</Card.Text>\n                  {link && (\n                    <Card.Link\n                      as={Link}\n                      to={link}\n                    >\n                      {t('linkText')}\n                    </Card.Link>\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\n/**\n * Features config.\n */\nconst featuresConfig: Array<{\n  icon: [IconPrefix, IconName];\n  link?: Path;\n}> = [\n  {\n    icon: ['fas', 'briefcase'],\n    link: Path.root,\n  },\n  {\n    icon: ['fas', 'shield-halved'],\n    link: Path.root,\n  },\n  {\n    icon: ['fas', 'percent'],\n    link: Path.root,\n  },\n  {\n    icon: ['fas', 'handshake'],\n    link: Path.root,\n  },\n  {\n    icon: ['fas', 'building-shield'],\n    link: Path.root,\n  },\n];\n","import { ReactElement } from 'react';\nimport { PictureBackground } from '../components';\nimport { MainContent } from '../components/Main/MainContent';\n\n/**\n * Main view.\n *\n * @returns React component.\n */\nconst MainView = (): ReactElement => {\n  return (\n    <>\n      <PictureBackground />\n      <MainContent />\n    </>\n  );\n};\n\nexport default MainView;\n"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","MainContent","t","useTranslation","keyPrefix","Container","styles","Row","featuresConfig","map","i","icon","link","Col","xs","sm","lg","size","toString","to","Path"],"sourceRoot":""}